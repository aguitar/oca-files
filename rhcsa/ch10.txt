=== LABS ===

--- 1 ---

1) on tester1.example.com create RSA keypair:
     - gpg2 --gen-key
2) generate public key from identity
     - gpg2 --export Steven Pequeno > steven_gpg.pub
3) copy .pub file to remote system (station12.example.com)
     - rsync -P steven_gpg.pub student@station12.example.com:/home/student/
4) on station12.example.com import pub file
     - gpg2 --import steven_gpg.pub
5) verify identity was imported 
     - gpg2 --list-keys
6) encrypt file:
     - gpg2 --out mysecret --recipient 'Steven Pequeno' --encrypt 56510-labs.txt
7) copy encrypted file to tester1.example.com
     - rsync -P mysecret student@192.168.122.168:/home/student/
8) on tester1.example.com decrypt file:
     - gpg2 --out labs.txt --decrypt mysecret


--- 2 ---

not much to do here, inspect /etc/init.d and use rpm -qf on any file
you want more information about. -qf queries the file and returns information
about the package to which that file belongs.

rpm -qf abrtd
-> abrt-2.0.8-21.el6.centos.x86_64
rpm -qi abrt-2.0.8-21.el6.centos.x86_64
-> Description :
abrt is a tool to help users to detect defects in applications and
to create a bug report with all informations needed by maintainer to fix it.
It uses plugin system to extend its functionality.

--- 3 ---

1) Secure inbound connections to regular (80) and secure (443) protocols also 
   SSH (22) with gui tool: system-config-firewall
     - make sure that WWW (HTTP), Secure WWW (HTTPS) and SSS are checked
     - save changes
2) check firewall settings:
     - iptables -L
   relevant lines:
ACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:https 
ACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:ssh 
ACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:http 

--- 4 ---

1) install telnet-sever on server1.example.com and telnet (client) on 
   tester1.example.com
     - yum install telnet-server
2) backup default config
     - cp /etc/xinetd.d/telnet ~/backups/
3) turn telnet on
     - sudo service xinetd start
     - chkconfig telnet on
4) edit telnet config file
     - sudo vim /etc/xinetd.d/telnet
5) add the rule which specifies which ip to accept connections from
   this is the ip of the VM we created: tester1.example.com
     - only_from = 192.168.122.168
6) try to telnet from the localhost (server1.example.com)
   should get error: Connection closed by foreign host.
     - telnet 172.21.101.105
7) try telnet from tester1.example.com. server1.example.com might have to have 
   port 23 tcp/udp opened on firewall to work.
     - telnet 172.21.101.105
8) restore original telnet config file and reload
     - cp /home/student/backups/telnet /etc/xinetd.d/telnet
   edit bottom line which disables telnet by default
     - vim /etc/xinetd.d/telnet
       - set: disable = no
     - service xinetd reload
9) backup current version of /etc/hosts.deny
     - cp /etc/hosts.deny /home/student/backups/
10) edit hosts.deny file and add: 
     - in.telnetd:ALL EXCEPT 192.168.122.168
11) restore original hosts.deny
     - cp /home/student/backups/hosts.deny /etc/hosts.deny
12) save iptables 
     - iptables-save > /home/student/backups/firewall-bkp.fw
13) backup current iptables file
     - cp /etc/sysconfig/iptables /home/student/backups/
14) try telnet again from local, tester1.example.com and another computer on
    LAN, all should be able to connect to telnet
15) flush firewall rules
     - iptables -F
16) deny all ip's except 192.168.122.168 using iptables
     - iptables -A INPUT ! -s 192.168.122.168 -p tcp --dport 23 -j DROP
17) restart firewall
     - /etc/init.d/iptables restart
18) 
