Solutions to linux+ labs: http://rackspace.edgecloud.com/linux+/Labs.pdf

=== SHELL BASICS ===

1) - mkdir test

2) - touch test/file1

3) - cd test
   - echo "Hello worllld" > file2

4) - sudo yum install hunspell hunspell-en -y
   - hunspell -l file2 > file2.typos

5) - cp file2 file2.copy
   - echo "Hello world" > file2.copy

6) - hunspell -l file2.copy

7) - mv file2.copy file3
   - hunspell -l file3
   - hunspell -l file3 > file3.typos

8) - chmod 400 *.typos

9) - chown student file1 file2 file3

10) - chown :student *.typos

11) - vim file3

12) - chmod u+w file3.typos
    - hunspell -l file3 | tee file3.typos

13) - cp file3 ../file100

14) - cp file3 /home/student/file101
    - cd

15) - diff file100 file101

16) - MYPATH=/home/student/test/
    - echo $MYPATH

17) - cd /tmp
    - ls $MYPATH

18) - bash
    - exit

19) - export MYPATH

20) - bash
    - exit

21) - ln -s /home/student/test/ link-to-test

22) - cd /home/student/test/
    - ln file1 hard-link-to-file1

23) - ls -i
    - hard links point to the same inode as the original file, so file1 and hard-link-to-file1
      have the same inode number

24) - *, ?, [, ], ., .., -, |, >, >>, <

25) - apropos passwd | wc

26) - ls /bin/c*
    - ls /bin/*r*
    - ls /bin/????

27) - set | sort

28) - unset MYPATH

29) - man find

30) - su -
    - find / -name "*ch*" | sort

31) - r (read) - files: allows the contents to be read using cat or vim, but not modified
               - directories: allows the 
    - w (write) - files:
                - directories:
    - x (execute) - files:
                  - directories:

32) - u (user) - files:
               - directories:
    - g (group) - files:
                - directories:
    - o (other) - files:
                - directories:

33) inode 2 is reserved for the root directory


=== SYSTEM ADMINISTRATION ===

1) sudo groupadd dev

2) sudo useradd -c "Alice from Dev" -s /bin/csh alice

3) sudo cat /var/log/secure | grep alice

4) sudo groupadd mktg

5) sudo useradd -g mktg -G dev bob
   sudo passwd -l bob

6) sudo usermod -g dev -G mktg bob
   sudo passwd -u bob 

7) sudo passwd -n 21 -x 45 bob
   sudo passwd -n 21 -x 45 alice

8) cd /
   sudo tar cf homebackup.tar /home/

9) sudo mkdir /backups
   sudo chmod 700 /backups/

10) sudo gzip --best homebackup.tar
    sudo mv /homebackup.tar.gz /backups/

11) su -
    cd /tmp/
    tar xzf /backups/homebackup.tar.gz
 
12) sudo yum list | tail -n +6 | wc
      - yum list will print all installed packages on system
      - tail removes some extra info from the top of the yum list output
        the flags tell tail to take all out put starting 6 lines in, ignoring 
        the extra info

13) yum list | tail -n +6 | sort

14) sudo rpm -qf /usr/bin/time

15) sudo vim /etc/crontab
      - add: */2 * *  *  * root date >> /tmp/mycronjob
    
16) dd if=/dev/zero of=myfs bs=1024 count=1000000
    sudo losetup /dev/loop0 myfs
    sudo mke2fs -t ext3 -b 1024 -m 2 -L myFileSystem /dev/loop0
    sudo mount /dev/loop0 /lab/
    sudo tune2fs -l /dev/loop0

17) script: https://raw.githubusercontent.com/epequeno/oca-files/master/scripts/backup.sh
    sudo vim /etc/conttab
     - add:  */5 * *  *  * root sh /home/student/backup.sh > /dev/null
     - edit: 0  2  *  *  * root sh /home/student/backup.sh > /dev/null

18) sudo touch /test1
    sudo ln /test1 /usr/local/hlink-to-test1

19) sudo mv /home/alice/ /lab/
    sudo usermod -d /lab/alice/ alice
    cat /etc/passwd | grep alice

20) ls -i /test1
    sudo find / -inum 14 2> /dev/null

21) sudo umount /lab
    sudo fsck /dev/loop0

22) 

23) man bash

24) sudo mount -o ro /dev/loop0 /lab/
    sudo touch rocheck (should error: touch: cannot touch `mynewfile': Read-only file system)

25) 

26) 

=== NETWORK ADMINISTRATION ===

1) ip a
    - inet 172.21.101.105/24 brd 172.21.101.255
   route 
    - default         172.21.101.1
   cat /etc/resolv.conf
    - nameserver 8.8.8.8

2) sudo service network stop

3) sudo vim /etc/sysconfig/network-scripts/ifcfg-eth0
     - set: BOOTPROTO="static"
     - set: NM_CONTROLLED="no"
     - add: DNS1=8.8.8.8
   sudo service network start
   sudo ip addr add 172.21.101.105/24 brd 172.21.101.255 dev eth0
   sudo route add default gw 172.21.101.1
   sudo mtr google.com (test connection)

4) ping yahoo.com

5) traceroute google.com

6) ps -Af | tail -n +2 | awk '{print $1}' | sort | uniq

7) 

8) apache - webserver
   mysql - database
   bind - DNS
   samba - network file sharing
   squid - proxy
   syslod - system logs
   cups - print server
   X - GUI server
   inetd - tcp wrapper
   gpm - mouse controller
   init - starts all other processes

9) wget ftp://ftp.gnu.org/ls-lrRt.txt.gz
   gunzip ls-lrRt.txt.gz

10) Detailed instructions: http://bit.ly/P0UWJO

 install dependencies
   yum install gcc gcc-c++ -y


2) Download and unpack:
    - PCRE - ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.35.tar.gz
    - httpd - http://www.webhostingjams.com/mirror/apache//httpd/httpd-2.2.27.tar.gz
    - APR - http://www.dsgnwrld.com/am//apr/apr-1.5.0.tar.gz
    - APR-util http://www.dsgnwrld.com/am//apr/apr-util-1.5.3.tar.gz
    - tar xzf each file from above

3) install PCRE -> APR -> APR-util -> httpd
- ./configure
- make
- sudo make install

Note: you will still have to specify the APR folder when installing APR-util:

- ./configure --with-apr=/home/student/apache/apr-1.5.0/

4) test
- sudo /usr/sbin/apachectl start
- check http://localhost in browser and you should see "Apache 2 Test Page
  powered by CentOS"
